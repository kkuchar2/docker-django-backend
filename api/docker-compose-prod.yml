version: '3'

services:
  api:
    container_name: api_container
    build:
      context: ..
      dockerfile: api/Dockerfile
    environment:
      - SECRET_KEY=${SECRET_KEY?Missing SECRET_KEY}
      - MYSQL_DATABASE=${MYSQL_DATABASE?Missing MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER?Missing MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD?Missing MYSQL_PASSWORD}
      - MYSQL_HOST=${MYSQL_HOST?Missing MYSQL_HOST}
      - MYSQL_PORT=${MYSQL_PORT?Missing MYSQL_PORT}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID?Missing AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY?Missing AWS_SECRET_ACCESS_KEY}
      - AWS_STORAGE_BUCKET_NAME=${MYSQL_PORT?Missing AWS_STORAGE_BUCKET_NAME}
      - AWS_S3_ENDPOINT_URL=${MYSQL_PORT?Missing AWS_S3_ENDPOINT_URL}
      - AWS_LOCATION=${AWS_LOCATION?Missing AWS_LOCATION}
      - PYTHONUNBUFFERED=1
      - PRODUCTION_ENV=True
  redis:
    image: redis
    container_name: redis_container
    ports:
      - 6380:6379
    restart: always

  celery-worker:
    container_name: celery_worker_container
    extends:
      service: api
    command: ./scripts/start_celery_worker.sh
    depends_on:
      - redis

  celery-beat:
    container_name: celery_beat_container
    extends:
      service: api
    command: ./scripts/start_celery_beat.sh
    depends_on:
      - redis
      - celery-worker

  django:
    image: django:latest
    container_name: django_container
    extends:
      service: api
    command: ./scripts/fire_up_server.sh
    ports:
      - 5000:5000
    restart: always
    depends_on:
      - redis
      - celery-worker
      - celery-beat